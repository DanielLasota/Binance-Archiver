<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9db54f06-b5e9-410f-aa1a-e8034e427035" name="Changes" comment="feat: __slots__ huge update">
      <change afterPath="$PROJECT_DIR$/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/binance_archiver/libraries_override/websocket/_socket.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/binance_archiver/main_data_sink.py" beforeDir="false" afterPath="$PROJECT_DIR$/binance_archiver/main_data_sink.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/binance_archiver/stream_listener.py" beforeDir="false" afterPath="$PROJECT_DIR$/binance_archiver/stream_listener.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/binance_archiver/test/archiver_daemon_tests.py" beforeDir="false" afterPath="$PROJECT_DIR$/binance_archiver/test/binance_archiver_facade_tests.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <excluded-from-favorite>
      <branch-storage>
        <map>
          <entry type="REMOTE">
            <value>
              <list>
                <branch-info repo="$PROJECT_DIR$" source="origin/master" />
              </list>
            </value>
          </entry>
        </map>
      </branch-storage>
    </excluded-from-favorite>
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="1138d88b37fff6fb3fc25bfdcb4028563cd2f401" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="SHOW_RECENT_BRANCHES" value="false" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;DanielLasota&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/DanielLasota/Binance-Archiver.git&quot;,
    &quot;accountId&quot;: &quot;ff3a6d08-efbb-4a1e-8d94-b7a43e882e20&quot;
  }
}</component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/venv/Lib/site-packages/azure/keyvault/secrets/_shared/client_base.py" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/venv/Lib/site-packages/dotenv/main.py" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/venv/Lib/site-packages/websocket/_app.py" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/venv/Lib/site-packages/websocket/_core.py" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/venv/Lib/site-packages/websocket/_socket.py" root0="SKIP_INSPECTION" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2eRrq11sffy8XpxcYJ7sUvwd3Kv" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Docker.Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Docker.binance_archiver/Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml.algo: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for ArchiverDaemonTests.TestArchiverDaemon.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonGetQueue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonGetQueue.test_given_archiver_daemon_when__get_queue_is_called_then_accurate_queue_hook_returned.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonInit.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonInit.test_given_archiver_daemon_when_init_then_7_difference_depth_queue_instances_is_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonInit.test_given_archiver_daemon_when_init_then_7_trade_queue_instances_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonInit.test_given_archiver_daemon_when_init_then_global_shutdown_flag_is_false.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonInit.test_given_archiver_daemon_when_init_then_queues_amount_is_accurate.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonInit.test_given_archiver_daemon_when_init_then_queues_are_set_properly.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonInit.test_given_send_zip_to_blob_is_true_and_azure_blob_parameters_with_key_is_bad_then_is_exception_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonInit.test_given_send_zip_to_blob_is_true_and_container_name_is_bad_then_is_exception_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonRun.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonRun.test_given_archiver_daemon_run_call_when_threads_invocation_then_accurate_set_of_threads_are_started.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonShutdown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonShutdown.test_given_archiver_daemon_when_shutdown_method_after_stream_switch_is_called_then_no_threads_are_left.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonShutdown.test_given_archiver_daemon_when_shutdown_method_before_stream_switch_is_called_then_no_threads_are_left.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonShutdown.test_given_archiver_daemon_when_shutdown_method_during_no_stream_switch_is_called_then_no_threads_are_left.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonShutdown.test_given_archiver_daemon_when_shutdown_method_during_stream_switch_is_called_then_no_threads_are_left.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonStreamServiceSupervisor.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonStreamServiceSupervisor.test_given_difference_stream_service_supervisor_when_start_then_stream_listeners_differs_couple_of_times.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonStreamServiceSupervisor.test_start_stream_service_supervisor_restarts_on_error.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonTimeUtils.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonTimeUtils.test_get_utc_formatted_timestamp.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonTimeUtils.test_get_utc_timestamp_epoch_milliseconds.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonTimeUtils.test_get_utc_timestamp_epoch_seconds.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestArchiverDaemonTimeUtils.test_given_get_actual_epoch_timestamp_are_timestamps_in_utc.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestLaunchDataSink.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestLaunchDataSink.test_given_config_has_no_instrument_then_is_exception_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestLaunchDataSink.test_given_market_type_is_empty_then_is_exception_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestLaunchDataSink.test_given_not_handled_market_type_then_is_exception_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.TestLaunchDataSink.test_given_too_many_markets_then_is_exception_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.Test_archiver_daemon_init.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_archiver_daemon.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_exception_handling_allows_loop_continuation.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given__get_queue_is_accurate_queue_hook_returned.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_archiver_daemon_run_call_when_threads_invocation_then_accurate_set_of_threads_are_started.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_archiver_daemon_when__get_queue_is_called_then_accurate_queue_hook_returned.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_archiver_daemon_when_init_7_difference_depth_queue_instances_is_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_archiver_daemon_when_init_7_trade_queue_instances_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_archiver_daemon_when_init_then_global_shutdown_flag_is_false.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_archiver_daemon_when_init_then_queues_amount_is_accurate.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_archiver_daemon_when_init_then_queues_are_set_properly.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_archiver_daemon_when_shutdown_method_before_stream_switch_is_called_then_no_threads_are_left.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_archiver_daemon_when_shutdown_method_during_stream_switch_is_called_then_no_threads_are_left.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_archiver_daemon_when_shutdown_method_is_called_then_no_threads_are_left.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_azure_blob_parameters_with_key_is_none_or_empty_then_is_exception_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_config_has_no_instrument_then_is_exception_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_difference_depth_stream_listener_when_connected_then_message_is_correctly_passed_to_diff_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_difference_stream_service_supervisor_when_start_then_stream_listeners_differs_couple_of_times.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_get_actual_epoch_timestamp_are_timestamps_actual.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_get_actual_epoch_timestamp_are_timestamps_in_utc.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_market_type_is_empty_then_is_exception_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_not_handled_market_type_then_is_exception_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_send_zip_to_blob_is_true_and_azure_blob_parameters_with_key_is_bad_then_is_exception_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_send_zip_to_blob_is_true_and_container_name_is_bad_then_is_exception_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_stream_listener_when_init_then_stream_listener_initializes_with_valid_parameters.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_stream_listener_when_init_with_pairs_amount_of_zero_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_stream_listener_when_init_with_pairs_argument_as_str_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_too_many_markets_then_is_exception_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_given_trade_stream_listener_when_connected_then_message_is_correctly_passed_to_trade_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_init.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_iteration_count.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_on_close_behaves_as_expected.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_on_error_logs_error.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_on_open_logs_message.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_start_stream_service_supervisor_restarts_on_error.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for archiver_daemon_tests.TestArchiverDaemon.test_timestamps_are_in_utc.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestArchiverFacade.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestArchiverFacade.test_given_archiver_daemon_when_shutdown_method_during_no_stream_switch_is_called_then_no_threads_are_left.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestArchiverFacade.test_given_archiver_daemon_when_shutdown_method_during_stream_switch_is_called_then_no_threads_are_left.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestArchiverFacade.test_given_archiver_facade_when_init_then_global_shutdown_flag_is_false.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestArchiverFacade.test_given_archiver_facade_when_init_then_queues_are_set_properly.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestArchiverFacade.test_given_archiver_facade_when_shutdown_called_then_no_threads_are_left.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestArchiverFacade.test_given_send_zip_to_blob_is_true_and_azure_blob_parameters_with_key_is_bad_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestArchiverFacade.test_given_send_zip_to_blob_is_true_and_container_name_is_bad_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestArchiverFacadeListenerMode.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestCommandLineInterface.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestCommandLineInterface.test_given_modify_subscription_when_adding_asset_then_asset_is_added_to_instruments.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestCommandLineInterface.test_given_modify_subscription_when_removing_asset_then_asset_is_removed_from_instruments.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestCommandLineInterface.test_handle_command_with_invalid_command_logs_warning.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestCommandLineInterface.test_modify_subscription_adds_asset_to_instruments.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestCommandLineInterface.test_modify_subscription_removes_asset_from_instruments.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSaver.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSaver.test_data_saver_is_not_initialized_in_listener_mode.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSaver.test_get_file_name_generates_correct_format.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSaver.test_given_blob_parameters_when_initializing_then_blob_service_client_is_initialized.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSaver.test_given_data_saver_when_run_then_stream_writers_are_started.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSaver.test_given_get_file_name_when_called_then_correct_format_is_returned.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSaver.test_given_no_blob_parameters_when_initializing_then_blob_service_client_is_none.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSaver.test_given_process_stream_data_when_queue_has_data_then_data_is_processed.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSaver.test_given_process_stream_data_when_queue_is_empty_then_no_action_is_taken.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSaver.test_given_start_stream_writer_when_called_then_thread_is_started.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSaver.test_given_stream_writer_when_shutdown_flag_set_then_exits_loop.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSaver.test_initialization_with_blob_parameters.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSaver.test_process_stream_data_with_data_in_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSaver.test_process_stream_data_with_empty_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSaver.test_run_data_saver_starts_stream_writers.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSaver.test_stream_writer_processes_data_and_respects_shutdown_flag.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSinkFacade.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSinkFacade.test_archiver_facade_initialization_in_listener_mode.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSinkFacade.test_given_archiver_daemon_when_shutdown_method_during_no_stream_switch_is_called_then_no_threads_are_left.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSinkFacade.test_given_archiver_facade_run_call_when_threads_invoked_then_correct_threads_are_started.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSinkFacade.test_given_archiver_facade_when_init_then_global_shutdown_flag_is_false.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSinkFacade.test_given_archiver_facade_when_init_then_queues_are_set_properly.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSinkFacade.test_given_archiver_facade_when_shutdown_called_then_no_threads_are_left.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSinkFacade.test_given_send_zip_to_blob_is_true_and_azure_blob_parameters_with_key_is_bad_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestDataSinkFacade.test_given_send_zip_to_blob_is_true_and_container_name_is_bad_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestLaunchDataListener.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestLaunchDataListener.test_given_invalid_instruments_config_then_exception_is_raised.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestLaunchDataListener.test_given_invalid_market_in_instruments_then_exception_is_raised.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestLaunchDataListener.test_given_invalid_websocket_life_time_seconds_then_exception_is_raised.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestLaunchDataListener.test_given_valid_config_then_archiver_facade_is_returned.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestLaunchDataSink.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestLaunchDataSink.test_given_config_has_no_instrument_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestLaunchDataSink.test_given_market_type_is_empty_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestLaunchDataSink.test_given_not_handled_market_type_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestLaunchDataSink.test_given_too_many_markets_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestLaunchDataSink.test_given_valid_config_then_archiver_facade_is_returned.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestListenerFacade.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestListenerFacade.test_archiver_facade_initialization_in_listener_mode.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestListenerFacade.test_attach_and_detach_observers.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestListenerFacade.test_given_archiver_facade_run_call_when_threads_invoked_then_correct_threads_are_started.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestListenerFacade.test_given_archiver_facade_when_init_then_global_shutdown_flag_is_false.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestListenerFacade.test_given_archiver_facade_when_init_then_queues_are_set_properly.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestListenerFacade.test_given_send_zip_to_blob_is_true_and_azure_blob_parameters_with_key_is_bad_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestObserverPattern.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestObserverPattern.test_observer_receives_notifications.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestQueuePool.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestQueuePool.test_given_queue_pool_when_initialized_then_queues_are_set_properly.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestQueuePool.test_given_queue_pool_when_more_than_allowed_trade_queues_created_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestQueuePool.test_queue_pool_initialization_in_listener_mode.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestQueuePoolDataSink.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestQueuePoolDataSink.test_given_queue_pool_when_get_queue_called_then_returns_correct_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestQueuePoolDataSink.test_given_queue_pool_when_more_than_allowed_difference_depth_queues_created_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestQueuePoolDataSink.test_given_queue_pool_when_more_than_allowed_trade_queues_created_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestQueuePoolDataSink.test_queue_pool_initialization_in_data_sink_mode.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestQueuePoolListener.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestQueuePoolListener.test_given_queue_pool_when_get_queue_called_then_returns_correct_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestQueuePoolListener.test_given_queue_pool_when_more_than_allowed_difference_depth_queues_created_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestQueuePoolListener.test_given_queue_pool_when_more_than_allowed_trade_queues_created_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestQueuePoolListener.test_queue_pool_initialization_in_listener_mode.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestSnapshotManager.TestDataSinkSnapshotStrategy.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestSnapshotManager.TestListenerSnapshotStrategy.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestSnapshotManager.TestSnapshotManager.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestSnapshotManager.TestSnapshotManager.test_given_data_sink_strategy_when_snapshot_received_then_data_saver_methods_called.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestSnapshotManager.TestSnapshotManager.test_given_exception_in_get_snapshot_when_snapshot_fetched_then_error_logged_and_no_snapshot_processed.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestSnapshotManager.TestSnapshotManager.test_given_exception_when_get_snapshot_called_then_none_returned_and_error_logged.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestSnapshotManager.TestSnapshotManager.test_given_listener_strategy_when_snapshot_received_then_snapshot_put_into_global_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestSnapshotManager.TestSnapshotManager.test_given_shutdown_flag_set_when_daemon_running_then_thread_exits.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestSnapshotManager.TestSnapshotManager.test_given_shutdown_flag_set_when_sleep_with_flag_check_called_then_method_exits_early.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestSnapshotManager.TestSnapshotManager.test_given_successful_response_when_get_snapshot_called_then_data_and_timestamps_returned.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestSnapshotManager.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestSnapshotManager.test_snapshot_manager_puts_snapshots_into_global_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestStreamService.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestStreamService.test_given_stream_service_when_init_with_empty_pairs_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestStreamService.test_given_stream_service_when_init_with_invalid_pairs_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestStreamService.test_stream_service_initialization_with_global_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestStreamService.test_stream_service_runs_streams_in_listener_mode.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestTimeUtils.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestTimeUtils.test_given_time_utils_when_getting_utc_formatted_timestamp_then_format_is_correct.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestWhistleblower.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestWhistleblower.test_whistleblower_exits_on_shutdown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.TestWhistleblower.test_whistleblower_processes_messages_and_notifies_observers.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestArchiverFacade.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestSnapshotManager.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.archiver_daemon_tests.TestSnapshotManager.test_init.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.binance_archiver_facade_tests.TestArchiverFacade.TestDataSinkFacade.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for binance_archiver.test.binance_archiver_facade_tests.TestArchiverFacade.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for blackout_supervisor_tests.TestBlackoutSupervisor.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for blackout_supervisor_tests.TestBlackoutSupervisor.test_given_blackout_supervisor_when_initialized_then_has_correct_parameters.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for blackout_supervisor_tests.TestBlackoutSupervisor.test_given_blackout_supervisor_when_no_error_callback_then_raises_exception.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for blackout_supervisor_tests.TestBlackoutSupervisor.test_given_blackout_supervisor_when_no_messages_for_max_interval_then_logger_warns.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_are_messages_being_added_to_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_behavior_when_global_queue_is_empty_in_data_listener_mode.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_benchmark.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_checking_size_when_method_invocation_then_result_is_ok.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_comparison_algorithm_benchmark.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_getting_from_queue_when_method_invocation_then_last_element_is_returned.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_getting_with_no_wait_from_queue_when_method_invocation_then_last_element_is_returned.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given__do_they_match_when_comparing_two_different_stream_listeners_throws_then_currently_accepted_stream_id_is_not_changed.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given__do_they_match_when_comparing_two_equal_stream_listeners_throws_then_currently_accepted_stream_id_is_changed.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_checking_amount_of_instances_when_get_instance_count_invocation_then_amount_is_correct.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_checking_empty_when_method_invocation_then_result_is_ok.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_clearing_difference_depth_queue_when_invocation_then_qsize_equals_zero.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_comparing_two_throws_when_sorting_messages_then_dict_is_sorted.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_comparing_two_throws_when_throws_are_equal_but_one_asset_is_duplicated_then_method_returns_false.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_comparing_two_throws_when_throws_are_equal_then_method_returns_true.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_comparing_two_throws_when_throws_are_not_equal_because_one_asset_is_duplicated_then_method_returns_false.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_comparing_two_throws_when_throws_are_not_equal_then_method_returns_false.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_difference_depth_queues_when_clear_instances_invocation_then_amount_is_zero.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_difference_depth_queues_when_get_instance_count_invocation_then_amount_is_correct.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_huge_amount_of_stream_listener_changes_when_comparing_message_queues_there_is_at_max_two_compare_structure_dict_keys.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_instances_amount_counter_reset_when_clear_instances_method_invocation_then_amount_is_zero.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_more_than_max_len_is_oldest_element_removed.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_more_than_maxlen_is_oldest_element_removed.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_processing_message_to_compare_structure_when_removing_event_timestamp_then_output_is_ok.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_putting_message_from_no_longer_accepted_stream_listener_id_when_try_to_put_then_message_is_not_added_to_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_putting_message_from_no_longer_accepted_stream_listener_id_when_try_to_put_then_message_is_not_added_to_the_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_putting_message_when_adding_messages_to_the_full_queues_then_is_last_message_being_removed.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_putting_message_when_adding_two_different_stream_listeners_message_throws_to_compare_structure_then_structure_is_ok.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_putting_message_when_next_100_ms_throws_is_being_compared_then_structure_is_properly_cleared_with_only_new_message_in_dict.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_putting_message_when_putting_message_of_currently_accepted_stream_id_then_message_is_being_added_to_the_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_putting_messages_whilst_changing_and_whilst_usual_working_mode_when_get_nowait_from_queue_then_order_and_amount_of_queue_elements_is_ok.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_putting_stream_message_and_two_last_throws_are_equal_when_two_listeners_messages_are_being_compared_then_currently_accepted_stream_id_is_changed_and_only_old_stream_listener_messages_are_put_in.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_putting_stream_message_and_two_last_throws_are_not_equal_when_two_listeners_messages_are_being_compared_then_currently_accepted_stream_id_is_not_changed_and_only_old_stream_listener_messages_are_put_in.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_too_many_difference_depth_queue_instances_exists_when_creating_new_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_too_many_difference_depth_queue_instances_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_too_many_difference_depth_queue_instantions_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_two_different_throws_when_compare_then_method_returns_false.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_two_equal_throws_does_method_return_true.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_two_equal_throws_when_compare_two_last_throws_then_method_returns_true.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_given_two_throws_does__sort_entries_by_symbol_sort_entries_by_symbol.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_initialization_without_global_queue_in_data_listener_mode.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_initialize_trade_queue_in_data_listener_mode_with_global_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_message_handling_in_data_listener_mode.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_queue_operations_in_data_listener_mode.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_roboczy_test.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_switching_logic_in_data_listener_mode.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue.test_trade_queue_message_handling_in_data_listener_mode.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.test_given_pretty_printed_message_from_test_when_reformatting_then_mesage_is_in_binance_format.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.test_given_pretty_printed_message_from_test_when_reformatting_then_message_is_in_binance_format.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for difference_depth_queue_tests.test_given_putting_message_from_no_longer_accepted_stream_listener_id_when_try_to_put_then_message_is_not_added_to_the_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for fastapi_manager_tests.TestFastApiManager.test.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for scraper_tests.TestIndividualColumnChecker.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for scraper_tests.TestIndividualColumnChecker.test_given_more_than_one_unique_value_in_pandas_series_when_check_if_is_there_only_one_unique_value_in_series_check_then_false_is_being_returned.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for scraper_tests.TestIndividualColumnChecker.test_given_more_than_one_unique_value_in_pandas_series_when_check_if_is_whole_series_made_of_only_one_expected_value_check_then_false_is_being_returned.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for scraper_tests.TestIndividualColumnChecker.test_given_one_unique_value_in_pandas_series_when_check_if_is_whole_series_made_of_only_one_expected_value_check_then_false_is_being_returned.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for scraper_tests.TestIndividualColumnChecker.test_given_only_one_unique_value_in_pandas_series_when_is_there_only_one_unique_value_in_series_check_then_true_is_being_returned.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for scraper_tests.TestIndividualColumnChecker.test_given_pandas_series_with_non_ascending_values_when_is_each_series_entry_greater_or_equal_to_previous_one_check_then_false_is_being_returned.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for scraper_tests.TestIndividualColumnChecker.test_given_pandas_series_with_non_descending_values_when_is_each_series_entry_greater_or_equal_to_previous_one_check_then_true_is_being_returned.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for scraper_tests.TestScraper.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestArchiverDaemon.test_get_utc_formatted_timestamp.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestArchiverDaemon.test_given_new_websocket_app_is_connection_established.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestArchiverDaemon.test_given_pairs_is_url_correct.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestOther.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_difference_depth_stream_listener_when_connected_then_message_is_correctly_passed_to_diff_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_difference_depth_stream_listener_when_init_then_supervisor_last_message_time_epoch_seconds_utc_is_changed.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_difference_depth_stream_listener_when_init_then_supervisor_starts_correctly.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_difference_depth_stream_listener_when_init_then_supervisor_starts_correctly_and_is_being_notifiead.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_difference_depth_stream_listener_when_init_then_supervisor_starts_correctly_and_is_being_notified.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_difference_depth_stream_listener_when_message_received_then_supervisor_is_notified.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_difference_depth_stream_listener_when_websocket_app_close_then_supervisor_is_properly_stopped.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_stream_listener_when_init_then_stream_listener_initializes_with_valid_parameters.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_stream_listener_when_init_with_pairs_amount_of_zero_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_stream_listener_when_init_with_pairs_argument_as_str_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_trade_stream_listener_when_connected_then_error_is_being_logged.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_trade_stream_listener_when_connected_then_message_is_correctly_passed_to_trade_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_trade_stream_listener_when_init_then_supervisor_last_message_time_epoch_seconds_utc_is_changed.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_trade_stream_listener_when_init_then_supervisor_starts_correctly.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_trade_stream_listener_when_init_then_supervisor_starts_correctly_.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_trade_stream_listener_when_init_then_supervisor_starts_correctly_and_is_being_notified.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_trade_stream_listener_when_message_income_stops_then_supervisors_sets_flag_to_stop.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_trade_stream_listener_when_message_received_then_supervisor_is_notified.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_trade_stream_listener_when_on_close_then_close_message_is_being_logged.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_trade_stream_listener_when_on_open_then_message_is_being_logged.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListener.test_given_trade_stream_listener_when_websocket_app_close_then_supervisor_is_properly_stopped.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListenerNew.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListenerNew.test_given_difference_depth_stream_listener_when_connected_then_message_is_correctly_passed_to_diff_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListenerNew.test_given_stream_listener_when_init_then_stream_listener_initializes_with_valid_parameters.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListenerNew.test_given_stream_listener_when_init_with_pairs_amount_of_zero_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListenerNew.test_given_stream_listener_when_init_with_pairs_argument_as_str_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListenerNew.test_given_trade_stream_listener_when_connected_then_error_is_being_logged.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListenerNew.test_given_trade_stream_listener_when_connected_then_message_is_correctly_passed_to_trade_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListenerNew.test_given_trade_stream_listener_when_on_close_then_close_message_is_being_logged.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for stream_listener_tests.TestStreamListenerNew.test_given_trade_stream_listener_when_on_open_then_message_is_being_logged.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for supervised_queue_tests.TestSupervisedQueue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for test.archiver_daemon_tests.TestStreamService.test_given_stream_service_when_init_with_empty_pairs_then_exception_is_thrown.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for trade_queue_tests.TestTradeQueue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for trade_queue_tests.TestTradeQueue.test_checking_size_when_method_invocation_then_result_is_ok.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for trade_queue_tests.TestTradeQueue.test_getting_with_no_wait_from_queue_when_method_invocation_then_last_element_is_returned.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for trade_queue_tests.TestTradeQueue.test_given_checking_empty_when_method_invocation_then_result_is_ok.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for trade_queue_tests.TestTradeQueue.test_given_clearing_difference_depth_queue_when_invocation_then_qsize_equals_zero.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for trade_queue_tests.TestTradeQueue.test_given_data_listener_mode_and_global_queue_when_initializing_trade_queue_then_queue_is_set_to_global_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for trade_queue_tests.TestTradeQueue.test_given_data_listener_mode_without_global_queue_when_initializing_trade_queue_then_value_error_is_raised.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for trade_queue_tests.TestTradeQueue.test_given_empty_global_queue_in_data_listener_mode_when_checking_queue_then_empty_and_get_nowait_raises_exception.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for trade_queue_tests.TestTradeQueue.test_given_getting_from_queue_when_get_nowait_then_last_element_is_returned.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for trade_queue_tests.TestTradeQueue.test_given_getting_message_signs_whilst_putting_message_when_get_message_signs_then_signs_are_returned_correctly.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for trade_queue_tests.TestTradeQueue.test_given_getting_messages_when_get_nowait_then_qsize_is_zero_and_got_list_is_ok.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for trade_queue_tests.TestTradeQueue.test_given_putting_message_from_no_longer_accepted_stream_listener_id_when_try_to_put_then_message_is_not_added_to_the_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for trade_queue_tests.TestTradeQueue.test_given_putting_message_when_putting_message_of_currently_accepted_stream_id_then_message_is_being_added_to_the_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for trade_queue_tests.TestTradeQueue.test_given_trade_messages_in_data_listener_mode_when_using_queue_operations_then_operations_reflect_global_queue_state.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for trade_queue_tests.test_given_pretty_printed_message_from_test_when_reformatting_then_message_is_in_binance_format.executor&quot;: &quot;Run&quot;,
    &quot;Python.main (1).executor&quot;: &quot;Run&quot;,
    &quot;Python.main.executor&quot;: &quot;Run&quot;,
    &quot;Python.main_data_quality_analytic.executor&quot;: &quot;Run&quot;,
    &quot;Python.main_data_sink.executor&quot;: &quot;Run&quot;,
    &quot;Python.main_listener.executor&quot;: &quot;Run&quot;,
    &quot;Python.main_scraper.executor&quot;: &quot;Run&quot;,
    &quot;Python.test_app.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;feature/add-azure-n-backblaze-scraper&quot;,
    &quot;last.edited.regexp&quot;: &quot;\&quot;E\&quot;:123,&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/daniellasota/PycharmProjects/Binance-Archiver/binance_archiver/libraries_override/websocket&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.customizations&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\daniellasota\PycharmProjects\Binance-Archiver\binance_archiver\libraries_override\websocket" />
      <recent name="C:\Users\daniellasota\PycharmProjects\Binance-Archiver\binance_archiver" />
      <recent name="C:\Users\defrg\PycharmProjects\Binance-Archiver\binance_archiver\config" />
      <recent name="C:\Users\defrg\PycharmProjects\Binance-Archiver\binance_archiver\enum" />
      <recent name="C:\Users\defrg\PycharmProjects\Binance-Archiver\binance_archiver" />
    </key>
  </component>
  <component name="RunManager" selected="Python.main_data_sink">
    <configuration name="main_data_sink" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="Binance Archiver" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/binance_archiver" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/binance_archiver/main_data_sink.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="pytest for difference_depth_queue_tests.TestDifferenceDepthQueue" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="Binance Archiver" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/binance_archiver/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;difference_depth_queue_tests.TestDifferenceDepthQueue&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for scraper_tests.TestIndividualColumnChecker" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="Binance Archiver" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/binance_archiver/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;scraper_tests.TestIndividualColumnChecker&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for scraper_tests.TestScraper" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="Binance Archiver" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/binance_archiver/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;scraper_tests.TestScraper&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for stream_listener_tests.TestStreamListener" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="Binance Archiver" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/binance_archiver/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;stream_listener_tests.TestStreamListener&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.main_data_sink" />
        <item itemvalue="Python tests.pytest for stream_listener_tests.TestStreamListener" />
        <item itemvalue="Python tests.pytest for scraper_tests.TestIndividualColumnChecker" />
        <item itemvalue="Python tests.pytest for scraper_tests.TestScraper" />
        <item itemvalue="Python tests.pytest for difference_depth_queue_tests.TestDifferenceDepthQueue" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-0e3be3396995-c546a90a8094-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-242.23339.19" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9db54f06-b5e9-410f-aa1a-e8034e427035" name="Changes" comment="" />
      <created>1711878419282</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1711878419282</updated>
      <workItem from="1711878427604" duration="20395000" />
      <workItem from="1711965356935" duration="6529000" />
      <workItem from="1712078910924" duration="6918000" />
      <workItem from="1712137781072" duration="597000" />
      <workItem from="1712350677388" duration="4201000" />
      <workItem from="1712490379972" duration="597000" />
      <workItem from="1712554291194" duration="15000" />
      <workItem from="1712958044344" duration="16104000" />
      <workItem from="1713033126282" duration="679000" />
      <workItem from="1713084815510" duration="5484000" />
      <workItem from="1713605865884" duration="8559000" />
      <workItem from="1713691467069" duration="1035000" />
      <workItem from="1713693446108" duration="10000" />
      <workItem from="1713693471583" duration="1018000" />
      <workItem from="1713701903895" duration="690000" />
      <workItem from="1713702664847" duration="7000" />
      <workItem from="1713702840071" duration="1174000" />
      <workItem from="1713862483109" duration="361000" />
      <workItem from="1713896144663" duration="1232000" />
    </task>
    <task id="LOCAL-00075" summary="refactor: Remove _sort_entries_by_symbol">
      <option name="closed" value="true" />
      <created>1726387488386</created>
      <option name="number" value="00075" />
      <option name="presentableId" value="LOCAL-00075" />
      <option name="project" value="LOCAL" />
      <updated>1726387488386</updated>
    </task>
    <task id="LOCAL-00076" summary="chore: Minor things refactored">
      <option name="closed" value="true" />
      <created>1726389050984</created>
      <option name="number" value="00076" />
      <option name="presentableId" value="LOCAL-00076" />
      <option name="project" value="LOCAL" />
      <updated>1726389050984</updated>
    </task>
    <task id="LOCAL-00077" summary="fix: Subscription feature fix">
      <option name="closed" value="true" />
      <created>1726398017385</created>
      <option name="number" value="00077" />
      <option name="presentableId" value="LOCAL-00077" />
      <option name="project" value="LOCAL" />
      <updated>1726398017385</updated>
    </task>
    <task id="LOCAL-00078" summary="fix: Fixed subscription feature - added @100 postfix">
      <option name="closed" value="true" />
      <created>1726414771871</created>
      <option name="number" value="00078" />
      <option name="presentableId" value="LOCAL-00078" />
      <option name="project" value="LOCAL" />
      <updated>1726414771872</updated>
    </task>
    <task id="LOCAL-00079" summary="fix: Fixed subscription feature - added @100 postfix">
      <option name="closed" value="true" />
      <created>1726415234446</created>
      <option name="number" value="00079" />
      <option name="presentableId" value="LOCAL-00079" />
      <option name="project" value="LOCAL" />
      <updated>1726415234446</updated>
    </task>
    <task id="LOCAL-00080" summary="refactor: setup_logger.py simplify">
      <option name="closed" value="true" />
      <created>1726526552533</created>
      <option name="number" value="00080" />
      <option name="presentableId" value="LOCAL-00080" />
      <option name="project" value="LOCAL" />
      <updated>1726526552533</updated>
    </task>
    <task id="LOCAL-00081" summary="fix: setup_logger.py arguments fixes">
      <option name="closed" value="true" />
      <created>1726527269297</created>
      <option name="number" value="00081" />
      <option name="presentableId" value="LOCAL-00081" />
      <option name="project" value="LOCAL" />
      <updated>1726527269297</updated>
    </task>
    <task id="LOCAL-00082" summary="feat: New trade queue switch mechanism &#10;test: added tests into trade_queue_tests.py">
      <option name="closed" value="true" />
      <created>1726706082356</created>
      <option name="number" value="00082" />
      <option name="presentableId" value="LOCAL-00082" />
      <option name="project" value="LOCAL" />
      <updated>1726706082357</updated>
    </task>
    <task id="LOCAL-00083" summary="build: Dockerfile pythonpath">
      <option name="closed" value="true" />
      <created>1726709332559</created>
      <option name="number" value="00083" />
      <option name="presentableId" value="LOCAL-00083" />
      <option name="project" value="LOCAL" />
      <updated>1726709332560</updated>
    </task>
    <task id="LOCAL-00084" summary="build: rename binance_archiver subfolder">
      <option name="closed" value="true" />
      <created>1726733071896</created>
      <option name="number" value="00084" />
      <option name="presentableId" value="LOCAL-00084" />
      <option name="project" value="LOCAL" />
      <updated>1726733071897</updated>
    </task>
    <task id="LOCAL-00085" summary="build: rename binance_archiver subfolder&#10;test: stream_listener_tests.py fixes after trade queue switch mechanism update">
      <option name="closed" value="true" />
      <created>1726734259775</created>
      <option name="number" value="00085" />
      <option name="presentableId" value="LOCAL-00085" />
      <option name="project" value="LOCAL" />
      <updated>1726734259775</updated>
    </task>
    <task id="LOCAL-00086" summary="build: rename blackout_supervisor.py file">
      <option name="closed" value="true" />
      <created>1726736301998</created>
      <option name="number" value="00086" />
      <option name="presentableId" value="LOCAL-00086" />
      <option name="project" value="LOCAL" />
      <updated>1726736301998</updated>
    </task>
    <task id="LOCAL-00087" summary="build: package structure refactor to Jean-Paul Calderone's pattern">
      <option name="closed" value="true" />
      <created>1726900240087</created>
      <option name="number" value="00087" />
      <option name="presentableId" value="LOCAL-00087" />
      <option name="project" value="LOCAL" />
      <updated>1726900240088</updated>
    </task>
    <task id="LOCAL-00088" summary="refactor: All archiver_daemon.py code refactored into the Facade pattern. &#10;test: archiver_daemon_tests.py refactored into new archiver_daemon.py Facade pattern">
      <option name="closed" value="true" />
      <created>1726925042723</created>
      <option name="number" value="00088" />
      <option name="presentableId" value="LOCAL-00088" />
      <option name="project" value="LOCAL" />
      <updated>1726925042723</updated>
    </task>
    <task id="LOCAL-00089" summary="feat: Working mode launch_data_listener add">
      <option name="closed" value="true" />
      <created>1727181902452</created>
      <option name="number" value="00089" />
      <option name="presentableId" value="LOCAL-00089" />
      <option name="project" value="LOCAL" />
      <updated>1727181902453</updated>
    </task>
    <task id="LOCAL-00090" summary="refactor: Split ArchiverFacade into ListenerFacade and DataSinkFacade&#10;test: split">
      <option name="closed" value="true" />
      <created>1727219004885</created>
      <option name="number" value="00090" />
      <option name="presentableId" value="LOCAL-00090" />
      <option name="project" value="LOCAL" />
      <updated>1727219004886</updated>
    </task>
    <task id="LOCAL-00091" summary="chore: Move Enums, configs into separate folders">
      <option name="closed" value="true" />
      <created>1727220459593</created>
      <option name="number" value="00091" />
      <option name="presentableId" value="LOCAL-00091" />
      <option name="project" value="LOCAL" />
      <updated>1727220459593</updated>
    </task>
    <task id="LOCAL-00092" summary="chore: Reformat SnapshotManager into Strategy Pattern, enum folder rename coz of conflicts&#10;test: tests update">
      <option name="closed" value="true" />
      <created>1727222549896</created>
      <option name="number" value="00092" />
      <option name="presentableId" value="LOCAL-00092" />
      <option name="project" value="LOCAL" />
      <updated>1727222549896</updated>
    </task>
    <task id="LOCAL-00093" summary="chore: rename main file">
      <option name="closed" value="true" />
      <created>1727225341538</created>
      <option name="number" value="00093" />
      <option name="presentableId" value="LOCAL-00093" />
      <option name="project" value="LOCAL" />
      <updated>1727225341539</updated>
    </task>
    <task id="LOCAL-00094" summary="refactor: QueuePool split into QueuePoolListener and QueuePoolDataSink">
      <option name="closed" value="true" />
      <created>1727227659002</created>
      <option name="number" value="00094" />
      <option name="presentableId" value="LOCAL-00094" />
      <option name="project" value="LOCAL" />
      <updated>1727227659002</updated>
    </task>
    <task id="LOCAL-00095" summary="chore: Minor refactor">
      <option name="closed" value="true" />
      <created>1727229303108</created>
      <option name="number" value="00095" />
      <option name="presentableId" value="LOCAL-00095" />
      <option name="project" value="LOCAL" />
      <updated>1727229303108</updated>
    </task>
    <task id="LOCAL-00096" summary="chore: Minor refactor">
      <option name="closed" value="true" />
      <created>1727230625127</created>
      <option name="number" value="00096" />
      <option name="presentableId" value="LOCAL-00096" />
      <option name="project" value="LOCAL" />
      <updated>1727230625127</updated>
    </task>
    <task id="LOCAL-00097" summary="fix: TradeQueue and DifferenceDepthQueue singleton change from 4 to 3">
      <option name="closed" value="true" />
      <created>1727231288435</created>
      <option name="number" value="00097" />
      <option name="presentableId" value="LOCAL-00097" />
      <option name="project" value="LOCAL" />
      <updated>1727231288435</updated>
    </task>
    <task id="LOCAL-00098" summary="feat: New production_config.json.json">
      <option name="closed" value="true" />
      <created>1727233060669</created>
      <option name="number" value="00098" />
      <option name="presentableId" value="LOCAL-00098" />
      <option name="project" value="LOCAL" />
      <updated>1727233060669</updated>
    </task>
    <task id="LOCAL-00099" summary="feat: New production_config.json.json, minor changes">
      <option name="closed" value="true" />
      <created>1727256066288</created>
      <option name="number" value="00099" />
      <option name="presentableId" value="LOCAL-00099" />
      <option name="project" value="LOCAL" />
      <updated>1727256066289</updated>
    </task>
    <task id="LOCAL-00100" summary="perf: difference_depth_queue.py json to orjson refactor + minor if refactors">
      <option name="closed" value="true" />
      <created>1727265547871</created>
      <option name="number" value="00100" />
      <option name="presentableId" value="LOCAL-00100" />
      <option name="project" value="LOCAL" />
      <updated>1727265547871</updated>
    </task>
    <task id="LOCAL-00101" summary="build: Requirements update, build update">
      <option name="closed" value="true" />
      <created>1727267890632</created>
      <option name="number" value="00101" />
      <option name="presentableId" value="LOCAL-00101" />
      <option name="project" value="LOCAL" />
      <updated>1727267890632</updated>
    </task>
    <task id="LOCAL-00102" summary="build: Requirements update, build update">
      <option name="closed" value="true" />
      <created>1727267973865</created>
      <option name="number" value="00102" />
      <option name="presentableId" value="LOCAL-00102" />
      <option name="project" value="LOCAL" />
      <updated>1727267973865</updated>
    </task>
    <task id="LOCAL-00103" summary="build: Requirements update, build update">
      <option name="closed" value="true" />
      <created>1727269035222</created>
      <option name="number" value="00103" />
      <option name="presentableId" value="LOCAL-00103" />
      <option name="project" value="LOCAL" />
      <updated>1727269035222</updated>
    </task>
    <task id="LOCAL-00104" summary="feat: BackBlaze handle add">
      <option name="closed" value="true" />
      <created>1727385496872</created>
      <option name="number" value="00104" />
      <option name="presentableId" value="LOCAL-00104" />
      <option name="project" value="LOCAL" />
      <updated>1727385496872</updated>
    </task>
    <task id="LOCAL-00105" summary="chore: configs update">
      <option name="closed" value="true" />
      <created>1727388305187</created>
      <option name="number" value="00105" />
      <option name="presentableId" value="LOCAL-00105" />
      <option name="project" value="LOCAL" />
      <updated>1727388305187</updated>
    </task>
    <task id="LOCAL-00106" summary="chore: configs update">
      <option name="closed" value="true" />
      <created>1727388351243</created>
      <option name="number" value="00106" />
      <option name="presentableId" value="LOCAL-00106" />
      <option name="project" value="LOCAL" />
      <updated>1727388351243</updated>
    </task>
    <task id="LOCAL-00107" summary="chore: minor updates">
      <option name="closed" value="true" />
      <created>1727396409887</created>
      <option name="number" value="00107" />
      <option name="presentableId" value="LOCAL-00107" />
      <option name="project" value="LOCAL" />
      <updated>1727396409887</updated>
    </task>
    <task id="LOCAL-00108" summary="refactor: Minor binance_archiver_facade.py refactor">
      <option name="closed" value="true" />
      <created>1727426858425</created>
      <option name="number" value="00108" />
      <option name="presentableId" value="LOCAL-00108" />
      <option name="project" value="LOCAL" />
      <updated>1727426858426</updated>
    </task>
    <task id="LOCAL-00109" summary="feat: data scraper init commit">
      <option name="closed" value="true" />
      <created>1727524744650</created>
      <option name="number" value="00109" />
      <option name="presentableId" value="LOCAL-00109" />
      <option name="project" value="LOCAL" />
      <updated>1727524744650</updated>
    </task>
    <task id="LOCAL-00110" summary="feat: New Command for changing websocket life time seconds">
      <option name="closed" value="true" />
      <created>1727605564218</created>
      <option name="number" value="00110" />
      <option name="presentableId" value="LOCAL-00110" />
      <option name="project" value="LOCAL" />
      <updated>1727605564218</updated>
    </task>
    <task id="LOCAL-00111" summary="feat: New Command for changing file durations seconds">
      <option name="closed" value="true" />
      <created>1727609357221</created>
      <option name="number" value="00111" />
      <option name="presentableId" value="LOCAL-00111" />
      <option name="project" value="LOCAL" />
      <updated>1727609357221</updated>
    </task>
    <task id="LOCAL-00112" summary="feat: New Command for changing snapshot intervals">
      <option name="closed" value="true" />
      <created>1727613258865</created>
      <option name="number" value="00112" />
      <option name="presentableId" value="LOCAL-00112" />
      <option name="project" value="LOCAL" />
      <updated>1727613258865</updated>
    </task>
    <task id="LOCAL-00113" summary="fix: removed print">
      <option name="closed" value="true" />
      <created>1727615917536</created>
      <option name="number" value="00113" />
      <option name="presentableId" value="LOCAL-00113" />
      <option name="project" value="LOCAL" />
      <updated>1727615917536</updated>
    </task>
    <task id="LOCAL-00114" summary="feat: final update of minor things, launching">
      <option name="closed" value="true" />
      <created>1727619420511</created>
      <option name="number" value="00114" />
      <option name="presentableId" value="LOCAL-00114" />
      <option name="project" value="LOCAL" />
      <updated>1727619420511</updated>
    </task>
    <task id="LOCAL-00115" summary="refactor: scraper.py refactor and optimize">
      <option name="closed" value="true" />
      <created>1728119623068</created>
      <option name="number" value="00115" />
      <option name="presentableId" value="LOCAL-00115" />
      <option name="project" value="LOCAL" />
      <updated>1728119623068</updated>
    </task>
    <task id="LOCAL-00116" summary="refactor: scraper.py refactor">
      <option name="closed" value="true" />
      <created>1728121320410</created>
      <option name="number" value="00116" />
      <option name="presentableId" value="LOCAL-00116" />
      <option name="project" value="LOCAL" />
      <updated>1728121320411</updated>
    </task>
    <task id="LOCAL-00117" summary="refactor: scraper.py connection params refactor">
      <option name="closed" value="true" />
      <created>1728122018481</created>
      <option name="number" value="00117" />
      <option name="presentableId" value="LOCAL-00117" />
      <option name="project" value="LOCAL" />
      <updated>1728122018481</updated>
    </task>
    <task id="LOCAL-00118" summary="refactor: scraper.py single column check methods with tests">
      <option name="closed" value="true" />
      <created>1728423810477</created>
      <option name="number" value="00118" />
      <option name="presentableId" value="LOCAL-00118" />
      <option name="project" value="LOCAL" />
      <updated>1728423810477</updated>
    </task>
    <task id="LOCAL-00119" summary="refactor: stream_type_enum.py refactor prior to official docs">
      <option name="closed" value="true" />
      <created>1728770671434</created>
      <option name="number" value="00119" />
      <option name="presentableId" value="LOCAL-00119" />
      <option name="project" value="LOCAL" />
      <updated>1728770671434</updated>
    </task>
    <task id="LOCAL-00120" summary="refactor: get_file_name refactor">
      <option name="closed" value="true" />
      <created>1728774606522</created>
      <option name="number" value="00120" />
      <option name="presentableId" value="LOCAL-00120" />
      <option name="project" value="LOCAL" />
      <updated>1728774606522</updated>
    </task>
    <task id="LOCAL-00121" summary="refactor: stream_listener.py logging messages style refactor">
      <option name="closed" value="true" />
      <created>1728776350780</created>
      <option name="number" value="00121" />
      <option name="presentableId" value="LOCAL-00121" />
      <option name="project" value="LOCAL" />
      <updated>1728776350780</updated>
    </task>
    <task id="LOCAL-00122" summary="feat: stream_listener.py __slots__ add">
      <option name="closed" value="true" />
      <created>1728777140679</created>
      <option name="number" value="00122" />
      <option name="presentableId" value="LOCAL-00122" />
      <option name="project" value="LOCAL" />
      <updated>1728777140679</updated>
    </task>
    <task id="LOCAL-00123" summary="feat: trade_queue.py and difference_depth_queue.py __slots__ update">
      <option name="closed" value="true" />
      <created>1728781422905</created>
      <option name="number" value="00123" />
      <option name="presentableId" value="LOCAL-00123" />
      <option name="project" value="LOCAL" />
      <updated>1728781422905</updated>
    </task>
    <option name="localTasksCounter" value="124" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.History.Properties">
    <option name="COLUMN_ID_ORDER">
      <list>
        <option value="Default.Root" />
        <option value="Default.Author" />
        <option value="Default.Date" />
        <option value="Default.Subject" />
      </list>
    </option>
    <option name="RECENT_FILTERS">
      <map>
        <entry key="Branch">
          <value>
            <list>
              <RecentGroup>
                <option name="FILTER_VALUES">
                  <option value="feature/trade-stream-listener-overlap-mechanism" />
                </option>
              </RecentGroup>
              <RecentGroup>
                <option name="FILTER_VALUES">
                  <option value="origin/feature/trade-stream-listener-overlap-mechanism" />
                </option>
              </RecentGroup>
            </list>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="origin/master" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="chore: Minor refactor" />
    <MESSAGE value="fix: TradeQueue and DifferenceDepthQueue singleton change from 4 to 3" />
    <MESSAGE value="feat: New production_config.json.json" />
    <MESSAGE value="feat: New production_config.json.json, minor changes" />
    <MESSAGE value="perf: difference_depth_queue.py json to orjson refactor + minor if refactors" />
    <MESSAGE value="build: Requirements update, build update" />
    <MESSAGE value="feat: BackBlaze handle add" />
    <MESSAGE value="chore: configs update" />
    <MESSAGE value="chore: minor updates" />
    <MESSAGE value="refactor: Minor binance_archiver_facade.py refactor" />
    <MESSAGE value="feat: data scraper init commit" />
    <MESSAGE value="feat: New Command for changing websocket life time seconds" />
    <MESSAGE value="feat: New Command for changing file durations seconds" />
    <MESSAGE value="feat: New Command for changing snapshot intervals" />
    <MESSAGE value="fix: removed print" />
    <MESSAGE value="feat: final update of minor things, launching" />
    <MESSAGE value="refactor: scraper.py refactor and optimize" />
    <MESSAGE value="refactor: scraper.py refactor" />
    <MESSAGE value="refactor: scraper.py connection params refactor" />
    <MESSAGE value="refactor: scraper.py single column check methods with tests" />
    <MESSAGE value="refactor: stream_type_enum.py refactor prior to official docs" />
    <MESSAGE value="refactor: get_file_name refactor" />
    <MESSAGE value="refactor: stream_listener.py logging messages style refactor" />
    <MESSAGE value="feat: stream_listener.py __slots__ add" />
    <MESSAGE value="feat: trade_queue.py and difference_depth_queue.py __slots__ update" />
    <option name="LAST_COMMIT_MESSAGE" value="feat: trade_queue.py and difference_depth_queue.py __slots__ update" />
  </component>
  <component name="XDebuggerManager">
    <watches-manager>
      <configuration name="PythonConfigurationType">
        <watch expression="message_list" />
      </configuration>
    </watches-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/Binance_Archiver$main.coverage" NAME="main Coverage Results" MODIFIED="1713655006874" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
</project>